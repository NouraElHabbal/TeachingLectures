xlab='Age (days)',
las=1, pch=19))
with(subset(weight.data, Gender==levels(Gender)[1]&Genotype==levels(Genotype)[2]),
points(age, Lean.Mass, col=palette()[2], pch=19))
with(subset(weight.data, Gender==levels(Gender)[1]&Genotype==levels(Genotype)[3]),
points(age, Lean.Mass, col=palette()[3], pch=19))
lines(with(subset(weight.data, Gender==levels(Gender)[1]&Genotype==levels(Genotype)[1]),
loess.smooth(age,Lean.Mass)), col=palette()[1])
lines(with(subset(weight.data, Gender==levels(Gender)[1]&Genotype==levels(Genotype)[2]),
loess.smooth(age,Lean.Mass)), col=palette()[2])
legend("topleft", do.call(paste, expand.grid(c(levels(weight.data$Genotype)),'-',levels(weight.data$Gender))),
lty=1, col=palette()[1:4], bty='n', cex=1)
yaxes <- with(combined.summary,
c(min(Lean.Mass.mean, na.rm=T)-max(Lean.Mass.se, na.rm=T),
c(max(Lean.Mass.mean, na.rm=T)+max(Lean.Mass.se, na.rm=T))))
plot <- with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[1]),
plot(Weeks, Lean.Mass.mean, type="l", ylim=yaxes,
las=1, ylab="Total Lean Mass (g)", col=palette()[1]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[2]),
lines(Weeks, Lean.Mass.mean, col=palette()[2]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[3]),
lines(Weeks, Lean.Mass.mean, col=palette()[3]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[1]),
superpose.eb(Weeks, Lean.Mass.mean, Lean.Mass.se, col=palette()[1]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[2]),
superpose.eb(Weeks, Lean.Mass.mean, Lean.Mass.se, col=palette()[2]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[3]),
superpose.eb(Weeks, Lean.Mass.mean, Lean.Mass.se, col=palette()[3]))
legend("topleft", do.call(paste, expand.grid(c("Knockout","Wild-Type"),'-',levels(weight.data$Gender))),
lty=1, col=palette()[1:4], bty='n', cex=1)
#statistics
lean.lme <- lmer(Lean.Mass~age*Genotype + (1|animal.id) + (age-1|animal.id), data=subset(weight.data,age<12*7), REML=F)
lean.lme.null <- lmer(Lean.Mass~age + (1|animal.id) + (age-1|animal.id), data=subset(weight.data,age<12*7), REML=F)
wt.predict.m <- predict(lean.lme, newdata=list(age=7*12, Gender="M", Genotype="+/+", animal.id=weight.data$animal.id[1]))
ko.predict.m <- predict(lean.lme, newdata=list(age=7*12, Gender="M", Genotype="-/-", animal.id=weight.data$animal.id[1]))
# wt.predict.f <- predict(lean.lme, newdata=list(age=7*12+70, Gender="F", Knockout=FALSE, animal.id=weight.data$animal.id[1]))
# ko.predict.f <- predict(lean.lme, newdata=list(age=7*12+70, Gender="F", Knockout=TRUE, animal.id=weight.data$animal.id[1]))
coefs <- data.frame(coef(summary(lean.lme)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
kable(coefs, caption="Estimates and p-values from mixed linear models.")
with(subset(weight.data, Genotype==levels(Genotype)[1]&Gender==levels(Gender)[1]),
plot(age, Total.Fat.Mass,
col=palette()[1],
ylab="Total Fat Mass (g)",
xlab='Age (days)',
ylim=c(0,max(weight.data$Total.Fat.Mass, na.rm=T)),
las=1, pch=19))
with(subset(weight.data, Genotype==levels(Genotype)[2]&Gender==levels(Gender)[1]),
points(age, Total.Fat.Mass, col=palette()[2], pch=19))
with(subset(weight.data, Genotype==levels(Genotype)[3]&Gender==levels(Gender)[1]),
points(age, Total.Fat.Mass, col=palette()[3], pch=19))
lines(with(subset(weight.data, Gender==levels(Gender)[1]&Genotype==levels(Genotype)[1]),
loess.smooth(age,Total.Fat.Mass)), col=palette()[1])
lines(with(subset(weight.data, Gender==levels(Gender)[1]&Genotype==levels(Genotype)[2]),
loess.smooth(age,Total.Fat.Mass)), col=palette()[2])
lines(with(subset(weight.data, Gender==levels(Gender)[1]&Genotype==levels(Genotype)[3]),
loess.smooth(age,Total.Fat.Mass)), col=palette()[3])
legend("topleft", do.call(paste, expand.grid(c(levels(weight.data$Genotype)),'-',levels(weight.data$Gender))),
lty=1, col=palette()[1:4], bty='n', cex=1)
yaxes <- with(combined.summary,
c(min(Total.Fat.Mass.mean, na.rm=T)-max(Total.Fat.Mass.se, na.rm=T),
c(max(Total.Fat.Mass.mean, na.rm=T)+max(Total.Fat.Mass.se, na.rm=T))))
plot <- with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[1]),
plot(Weeks, Total.Fat.Mass.mean, type="l", ylim=yaxes,
las=1, ylab="Total Fat Mass (g)", col=palette()[1]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[2]),
lines(Weeks, Total.Fat.Mass.mean, col=palette()[2]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[3]),
lines(Weeks, Total.Fat.Mass.mean, col=palette()[3]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[1]),
superpose.eb(Weeks, Total.Fat.Mass.mean, Total.Fat.Mass.se, col=palette()[1]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[2]),
superpose.eb(Weeks, Total.Fat.Mass.mean, Total.Fat.Mass.se, col=palette()[2]))
with(subset(combined.summary,
Gender==levels(Gender)[1]&Genotype==levels(Genotype)[3]),
superpose.eb(Weeks, Total.Fat.Mass.mean, Total.Fat.Mass.se, col=palette()[3]))
legend("topleft", do.call(paste, expand.grid(c(levels(weight.data$Genotype)),'-',levels(weight.data$Gender))),
lty=1, col=palette()[1:4], bty='n', cex=1)
#statistics
fat.lme <- lmer(Total.Fat.Mass~age*Genotype + (1|animal.id) + (age-1|animal.id), data=subset(weight.data,age<12*7+70), REML=F)
fat.lme.null <- lmer(Total.Fat.Mass~age + (1|animal.id) + (age-1|animal.id), data=subset(weight.data,age<12*7+70), REML=F)
wt.predict.m <- predict(fat.lme, newdata=list(age=7*12, Genotype="+/+", animal.id=weight.data$animal.id[1]))
ko.predict.m <- predict(fat.lme, newdata=list(age=7*12, Genotype="-/-", animal.id=weight.data$animal.id[1]))
# wt.predict.f <- predict(fat.lme, newdata=list(age=7*12+70, Gender="F", Knockout=FALSE, animal.id=weight.data$animal.id[1]))
# ko.predict.f <- predict(fat.lme, newdata=list(age=7*12+70, Gender="F", Knockout=TRUE, animal.id=weight.data$animal.id[1]))
coefs <- data.frame(coef(summary(fat.lme)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
kable(coefs, caption="Estimates and p-values from mixed linear models.")
#statistics
fat.mass.lme <- lmer(Total.Fat.Mass ~ age * Genotype + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
fat.mass.lme.null <- lmer(Total.Fat.Mass ~ age + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
#using
library(influence.ME)
infl <- influence(fat.mass.lme, group='animal.id')
par(mfrow=c(1,3))
plot(density(residuals(fat.mass.lme)), main="Effects of Srebf1-m1 Knockout", las=1)
plot(fitted(fat.mass.lme),residuals(fat.mass.lme),  ylab="Residuals", xlab="Fitted Values (g)", pch=19, las=1)
abline(h=0, lty=2, col='red')
barplot(cooks.distance(infl), las=2, names.arg=rownames(cooks.distance(infl)),  beside=T, ylab="Cook's Distance", col='grey')
#statistics
fat.mass.lme <- lmer(Total.Fat.Mass ~ age * Genotype + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
fat.mass.lme.null <- lmer(Total.Fat.Mass ~ age + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
#using
library(influence.ME)
infl <- influence(fat.mass.lme, group='animal.id')
par(mfrow=c(1,3))
plot(density(residuals(fat.mass.lme)), main="Effects of Srebf1-m1 Knockout", las=1)
plot(fitted(fat.mass.lme),residuals(fat.mass.lme),  ylab="Residuals", xlab="Fitted Values (g)", pch=19, las=1)
abline(h=0, lty=2, col='red')
barplot(cooks.distance(infl), las=2, names.arg=rownames(cooks.distance(infl)), cex.names=0.5, beside=T, ylab="Cook's Distance", col='grey')
fitted(fat.mass.lme)
fat.mass.lme
weight.data
plot(fitted(fat.mass.lme),residuals(fat.mass.lme),  ylab="Residuals", xlab="Fitted Values (g)", pch=19, las=1, col=weight.data$Genotype)
#statistics
fat.mass.lme <- lmer(Total.Fat.Mass ~ age * Genotype + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
fat.mass.lme.null <- lmer(Total.Fat.Mass ~ age + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
#using
library(influence.ME)
infl <- influence(fat.mass.lme, group='animal.id')
par(mfrow=c(1,3))
plot(density(residuals(fat.mass.lme)), las=1)
plot(fitted(fat.mass.lme),residuals(fat.mass.lme),  ylab="Residuals", xlab="Fitted Values (g)", pch=19, las=1, col=weight.data$Genotype)
abline(h=0, lty=2, col='red')
barplot(cooks.distance(infl), las=2, names.arg=rownames(cooks.distance(infl)), cex.names=0.5, beside=T, ylab="Cook's Distance", col=weight.data$Genotype, xlab="AnimalID (not eartag)")
weight.data$Genotype
cooks.distance(infl))
cooks.distance(infl)
dim(cooks.distance(infl))
dim(weight.data$Genotype)
length(weight.data$Genotype)
select(weight.data, animal.id, Genotype)
select(weight.data, animal.id, Genotype) %>% distinct(animal.id, .keep_all=T)
unique_animals <- select(weight.data, animal.id, Genotype) %>%
distinct(animal.id, .keep_all=T) %>%
arrange(animal.id)
unique_animals
unique_animals$animal.id
unique_animals$animal.id == cooks.distance(infl)
unique_animals$animal.id == rownames(cooks.distance(infl))
#statistics
fat.mass.lme <- lmer(Total.Fat.Mass ~ age * Genotype + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
fat.mass.lme.null <- lmer(Total.Fat.Mass ~ age + (1|animal.id) + (age-1|animal.id), data=weight.data, REML=F)
#using
library(influence.ME)
infl <- influence(fat.mass.lme, group='animal.id')
par(mfrow=c(1,3))
plot(density(residuals(fat.mass.lme)), las=1)
plot(fitted(fat.mass.lme),residuals(fat.mass.lme),  ylab="Residuals (g)", xlab="Fitted Values (g)", pch=19, las=1, col=weight.data$Genotype)
abline(h=0, lty=2, col='red')
#determine order of genotypes in influene plot
unique_animals <- select(weight.data, animal.id, Genotype) %>%
distinct(animal.id, .keep_all=T) %>%
arrange(animal.id)
barplot(cooks.distance(infl), las=2,
names.arg=rownames(cooks.distance(infl)),
cex.names=0.5, beside=T,
ylab="Cook's Distance",
col=unique_animals$Genotype, xlab="AnimalID (not eartag)")
setwd("~/Documents/GitHub/TeachingLectures/Michigan/NUTR630/Illustrations/FA Composition")
datafile <- 'Oils.csv'
data <- read.csv(datafile, row.names='X')
datafile <- 'Oils.csv'
data <- read.csv(datafile)
library(gplots)
heatmap.2(as.matrix(data),
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data")
data
data[,3:5]
library(gplots)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data")
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized")
View(data)
library(gplots)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data",
names.arg=data$Food)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized",
names.arg=data$Food)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized",
names.arg=data$Food)
library(gplots)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data",
row.names=data$Food)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized",
names.arg=data$Food)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized",
names.arg=data$Food)
library(gplots)
heatmap.2(data.matrix
cexRow=0.75,
datafile <- 'Oils.csv'
data <- read.csv(datafile)
data.matrix <- as.matrix(data[,3:5])
row.names(data.matrix) <- data$Food
library(gplots)
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data")
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized",
names.arg=data$Food)
heatmap.2(as.matrix(data[,3:5]),
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized",
names.arg=data$Food)
library(gplots)
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data")
heatmap.2(data.matrix
cexRow=0.75,
library(gplots)
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data")
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized")
library(gplots)
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data")
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized")
datafile <- 'Oils.csv'
data <- read.csv(datafile)
data.matrix <- as.matrix(data[,3:5])
row.names(data.matrix) <- data$Food
colfunc <- colorRampPalette(c("black", "white"))
datafile <- 'Oils.csv'
data <- read.csv(datafile)
data.matrix <- as.matrix(data[,3:5])
row.names(data.matrix) <- data$Food
michigan <- colorRampPalette(c("ffcb05", "00274c"))
datafile <- 'Oils.csv'
data <- read.csv(datafile)
data.matrix <- as.matrix(data[,3:5])
row.names(data.matrix) <- data$Food
michigan <- colorRampPalette(c("#ffcb05", "#00274c"))
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
trace='none',
main="Raw Data")
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized")
?mar
?par
library(gplots)
#increase margins
par(mar=c(7,4,4,7)+0.1)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
trace='none')
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized")
library(gplots)
#increase margins
par(mar=c(7,4,4,1)+0.1)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
trace='none')
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized")
library(gplots)
#increase margins
par(mar=c(10,4,4,2))
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
trace='none')
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
main="Normalized")
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
trace='none')
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
margins=c(8,8),
main="Normalized")
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
trace='none')
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="column",
trace='none',
main="Normalized")
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
scale="row",
trace='none',
margins=c(10,10),
main="Normalized")
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
margins=c(10,10),
trace='none')
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
margins=c(10,10),
las=1,
trace='none')
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
margins=c(10,10),
las=2,
trace='none')
library(gplots)
heatmap.2(data.matrix,
col=michigan,
margins=c(10,10),
las=2,
trace='none')
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
margins=c(10,10),
las=2,
trace='none')
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
margins=c(10,10),
las=2,
Colv=F,
trace='none')
library(gplots)
heatmap.2(data.matrix,
col=michigan,
cexRow=0.75,
cexCol=0.75,
margins=c(10,10),
las=2,
Colv=F,
trace='none')
